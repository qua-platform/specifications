from qua_spec.grammar_model import *
from qua_spec.grammar_builder import props, types
import qua_spec.predefined_validations as validations

grammar = GrammarModel(
    version="2.0.0-draft",
    types=types(
        DataType(
            name="Program",
            properties=props(
                TypeProperty(
                    name="script",
                    type=TypeReference(
                        type="Script",
                        list=False
                    )
                ),
                TypeProperty(
                    name="config",
                    type=TypeReference(
                        type="Config",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="Script",
            properties=props(
                TypeProperty(
                    name="variables",
                    type=TypeReference(
                        type="VariableDeclaration",
                        list=True
                    )
                ),
                TypeProperty(
                    name="body",
                    type=TypeReference(
                        type="StatementCollection",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="Config",
            properties=props(
                TypeProperty(
                    name="analog_outputs",
                    type=TypeReference(
                        type="AnalogOutputConfig",
                        list=True
                    )
                ),
                TypeProperty(
                    name="analog_inputs",
                    type=TypeReference(
                        type="AnalogInputConfig",
                        list=True
                    )
                ),
                TypeProperty(
                    name="digital_outputs",
                    type=TypeReference(
                        type="DigitalOutputConfig",
                        list=True
                    )
                ),
                TypeProperty(
                    name="digital_inputs",
                    type=TypeReference(
                        type="DigitalInputConfig",
                        list=True
                    )
                ),
                TypeProperty(
                    name="oscillators",
                    type=TypeReference(
                        type="OscillatorConfig",
                        list=True
                    )
                ),
                TypeProperty(
                    name="analog_waveforms",
                    type=TypeReference(
                        type="AnalogWaveformConfig",
                        list=True
                    )
                ),
                TypeProperty(
                    name="analog_pulses",
                    type=TypeReference(
                        type="AnalogPulseConfig",
                        list=True
                    )
                ),
                TypeProperty(
                    name="digital_waveforms",
                    type=TypeReference(
                        type="DigitalWaveformConfig",
                        list=True
                    )
                ),
                TypeProperty(
                    name="digital_routes",
                    type=TypeReference(
                        type="DigitalRouteConfig",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="VariableDeclaration",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="type",
                    type=TypeReference(
                        type="QuaPrimitiveType",
                        list=False
                    )
                ),
                TypeProperty(
                    name="size",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=True
                    )
                ),
                TypeProperty(
                    name="values",
                    type=TypeReference(
                        type="LiteralExpression",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="StatementCollection",
            properties=props(
                TypeProperty(
                    name="statements",
                    type=TypeReference(
                        type="AnyStatement",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        UnionType(
            name="AnalogOutputConfig",
            types=[]
        ),
        DataType(
            name="AnalogInputConfig",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="controller",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="port",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="offset",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="DigitalOutputConfig",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="controller",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="port",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="DigitalInputConfig",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="controller",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="port",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="OscillatorConfig",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="intermediate_frequency",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="correction_matix",
                    type=TypeReference(
                        type="CorrectionMatrixConfig",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        UnionType(
            name="AnalogWaveformConfig",
            types=[]
        ),
        UnionType(
            name="AnalogPulseConfig",
            types=[]
        ),
        DataType(
            name="DigitalWaveformConfig",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="samples",
                    type=TypeReference(
                        type="DigitalWaveformSample",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="DigitalRouteConfig",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="delay",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="buffer",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="outputs",
                    type=TypeReference(
                        type="DigitalOutputReference",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        EnumType(
            name="QuaPrimitiveType",
            values=["Int", "Fixed", "Boolean"]
        ),
        UnionType(
            name="LiteralExpression",
            types=[]
        ),
        UnionType(
            name="AnyStatement",
            types=[]
        ),
        DataType(
            name="AnalogSingleOutputConfig",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="controller",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="port",
                    type=TypeReference(
                        type="AnalogOutputPortConfig",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="AnalogMixedOutputConfig",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="controller",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="port_I",
                    type=TypeReference(
                        type="AnalogOutputPortConfig",
                        list=False
                    )
                ),
                TypeProperty(
                    name="port_Q",
                    type=TypeReference(
                        type="AnalogOutputPortConfig",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="CorrectionMatrixConfig",
            properties=props(
                TypeProperty(
                    name="v00",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="v01",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="v10",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="v11",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="ConstantWaveformConfig",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="sample",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="ArbitraryWaveformConfig",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="samples",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="SinglePulseConfig",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="waveform",
                    type=TypeReference(
                        type="AnalogWaveformReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="length",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="MixedPulseConfig",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="waveform_I",
                    type=TypeReference(
                        type="AnalogWaveformReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="waveform_Q",
                    type=TypeReference(
                        type="AnalogWaveformReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="length",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="DigitalWaveformSample",
            properties=props(
                TypeProperty(
                    name="value",
                    type=TypeReference(
                        type=PrimitiveData.boolean,
                        list=False
                    )
                ),
                TypeProperty(
                    name="length",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="DigitalOutputReference",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="LiteralFixedExpression",
            properties=props(
                TypeProperty(
                    name="value",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="LiteralIntegerExpression",
            properties=props(
                TypeProperty(
                    name="value",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="LiteralBooleanExpression",
            properties=props(
                TypeProperty(
                    name="value",
                    type=TypeReference(
                        type=PrimitiveData.boolean,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="AssignmentStatement",
            properties=props(
                TypeProperty(
                    name="lhs",
                    type=TypeReference(
                        type="AnyTargetExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="rhs",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="SaveStatement",
            properties=props(
                TypeProperty(
                    name="source",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="target",
                    type=TypeReference(
                        type="SaveTargetReference",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="ForStatement",
            properties=props(
                TypeProperty(
                    name="pairs",
                    type=TypeReference(
                        type="VarIterablePair",
                        list=True
                    )
                ),
                TypeProperty(
                    name="body",
                    type=TypeReference(
                        type="StatementCollection",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="WhileStatement",
            properties=props(
                TypeProperty(
                    name="condition",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="body",
                    type=TypeReference(
                        type="StatementCollection",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="IfStatement",
            properties=props(
                TypeProperty(
                    name="condition",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="body",
                    type=TypeReference(
                        type="StatementCollection",
                        list=False
                    )
                ),
                TypeProperty(
                    name="else_if",
                    type=TypeReference(
                        type="ElseIfPart",
                        list=True
                    )
                ),
                TypeProperty(
                    name="else_body",
                    type=TypeReference(
                        type="StatementCollection",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="BreakStatement",
            properties=props(

            ),
            validations=[]
        ),
        DataType(
            name="ContinueStatement",
            properties=props(

            ),
            validations=[]
        ),
        DataType(
            name="SwitchStatement",
            properties=props(
                TypeProperty(
                    name="expression",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="cases",
                    type=TypeReference(
                        type="CasePart",
                        list=True
                    )
                ),
                TypeProperty(
                    name="default",
                    type=TypeReference(
                        type="StatementCollection",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="SequenceStatement",
            properties=props(
                TypeProperty(
                    name="body",
                    type=TypeReference(
                        type="StatementCollection",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="PlayStatement",
            properties=props(
                TypeProperty(
                    name="plays",
                    type=TypeReference(
                        type="PlayPart",
                        list=True
                    )
                ),
                TypeProperty(
                    name="length",
                    type=TypeReference(
                        type="OptionalDuration",
                        list=False
                    )
                ),
                TypeProperty(
                    name="condition",
                    type=TypeReference(
                        type="OptionalCondition",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="WaitStatement",
            properties=props(
                TypeProperty(
                    name="time",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="ParallelStatement",
            properties=props(
                TypeProperty(
                    name="threads",
                    type=TypeReference(
                        type="ThreadPart",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="AlignStatement",
            properties=props(
                TypeProperty(
                    name="threads",
                    type=TypeReference(
                        type="ThreadReference",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="WaitForTriggerStatement",
            properties=props(
                TypeProperty(
                    name="input",
                    type=TypeReference(
                        type="DigitalInputReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="plays",
                    type=TypeReference(
                        type="PlayPart",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="PauseStatement",
            properties=props(

            ),
            validations=[]
        ),
        DataType(
            name="RepeatStatement",
            properties=props(
                TypeProperty(
                    name="times",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="body",
                    type=TypeReference(
                        type="StatementCollection",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="AnalogOutputPortConfig",
            properties=props(
                TypeProperty(
                    name="port",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="filter",
                    type=TypeReference(
                        type="AnalogOutputFilterConfig",
                        list=False
                    )
                ),
                TypeProperty(
                    name="offset",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="AnalogWaveformReference",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        UnionType(
            name="AnyTargetExpression",
            types=[]
        ),
        UnionType(
            name="AnyExpression",
            types=[]
        ),
        DataType(
            name="SaveTargetReference",
            properties=props(
                TypeProperty(
                    name="tag",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="VarIterablePair",
            properties=props(
                TypeProperty(
                    name="variable",
                    type=TypeReference(
                        type="VarRefExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="values",
                    type=TypeReference(
                        type="AnyIterableExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="ElseIfPart",
            properties=props(
                TypeProperty(
                    name="condition",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="body",
                    type=TypeReference(
                        type="StatementCollection",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="CasePart",
            properties=props(
                TypeProperty(
                    name="case",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="body",
                    type=TypeReference(
                        type="StatementCollection",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        UnionType(
            name="PlayPart",
            types=[]
        ),
        UnionType(
            name="OptionalDuration",
            types=[]
        ),
        UnionType(
            name="OptionalCondition",
            types=[]
        ),
        DataType(
            name="ThreadPart",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="body",
                    type=TypeReference(
                        type="StatementCollection",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="ThreadReference",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="DigitalInputReference",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="AnalogOutputFilterConfig",
            properties=props(
                TypeProperty(
                    name="feed_forward",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=True
                    )
                ),
                TypeProperty(
                    name="feed_back",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="VarRefExpression",
            properties=props(
                TypeProperty(
                    name="variable",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="ArrayCellExpression",
            properties=props(
                TypeProperty(
                    name="array",
                    type=TypeReference(
                        type="ArrayRefExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="index",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="IORefExpression",
            properties=props(
                TypeProperty(
                    name="io",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="ArrayRefExpression",
            properties=props(
                TypeProperty(
                    name="array",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="BinaryExpression",
            properties=props(
                TypeProperty(
                    name="op",
                    type=TypeReference(
                        type="BinaryOperator",
                        list=False
                    )
                ),
                TypeProperty(
                    name="left",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="right",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="UnaryExpression",
            properties=props(
                TypeProperty(
                    name="op",
                    type=TypeReference(
                        type="UnaryOperator",
                        list=False
                    )
                ),
                TypeProperty(
                    name="operand",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="LibFunctionExpression",
            properties=props(
                TypeProperty(
                    name="library_name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="function_name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="positioned_arguments",
                    type=TypeReference(
                        type="AnyExpression",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        UnionType(
            name="AnyIterableExpression",
            types=[]
        ),
        DataType(
            name="AnalogPlayPart",
            properties=props(
                TypeProperty(
                    name="pulse",
                    type=TypeReference(
                        type="AnyAnalogPulse",
                        list=False
                    )
                ),
                TypeProperty(
                    name="output",
                    type=TypeReference(
                        type="AnalogOutputReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="oscillator",
                    type=TypeReference(
                        type="OptionalOscillator",
                        list=False
                    )
                ),
                TypeProperty(
                    name="chirp",
                    type=TypeReference(
                        type="OptionalChirp",
                        list=False
                    )
                ),
                TypeProperty(
                    name="amplitude",
                    type=TypeReference(
                        type="OptionalAmpMultiplier",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="DigitalPlayPart",
            properties=props(
                TypeProperty(
                    name="waveform",
                    type=TypeReference(
                        type="DigitalWaveformReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="route",
                    type=TypeReference(
                        type="DigitalRouteReference",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="Duration",
            properties=props(
                TypeProperty(
                    name="value",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="NoDuration",
            properties=props(

            ),
            validations=[]
        ),
        DataType(
            name="Condition",
            properties=props(
                TypeProperty(
                    name="value",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="NoCondition",
            properties=props(

            ),
            validations=[]
        ),
        EnumType(
            name="BinaryOperator",
            values=["ADD", "SUB", "MULT", "DIV", "AND", "OR", "XOR", "LT", "LET", "GT", "GET", "EQ", "SHL", "SHR"]
        ),
        EnumType(
            name="UnaryOperator",
            values=["NEG", "NOT"]
        ),
        DataType(
            name="RangeExpression",
            properties=props(
                TypeProperty(
                    name="from",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="to",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="step",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        UnionType(
            name="AnyAnalogPulse",
            types=[]
        ),
        DataType(
            name="AnalogOutputReference",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        UnionType(
            name="OptionalOscillator",
            types=[]
        ),
        UnionType(
            name="OptionalChirp",
            types=[]
        ),
        UnionType(
            name="OptionalAmpMultiplier",
            types=[]
        ),
        DataType(
            name="DigitalWaveformReference",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="DigitalRouteReference",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="ConstantPulse",
            properties=props(
                TypeProperty(
                    name="value",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="RampPulse",
            properties=props(
                TypeProperty(
                    name="slope",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="base",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="ReferencedPulse",
            properties=props(
                TypeProperty(
                    name="pulse",
                    type=TypeReference(
                        type="AnalogPulseReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="interpolation",
                    type=TypeReference(
                        type="OptionalInterpolation",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="OscillatorReference",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="NoOscillator",
            properties=props(

            ),
            validations=[]
        ),
        DataType(
            name="Chirp",
            properties=props(
                TypeProperty(
                    name="rate",
                    type=TypeReference(
                        type="ChirpRates",
                        list=False
                    )
                ),
                TypeProperty(
                    name="unit",
                    type=TypeReference(
                        type="ChirpUnit",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="NoChirp",
            properties=props(

            ),
            validations=[]
        ),
        DataType(
            name="AmpMultiplier",
            properties=props(
                TypeProperty(
                    name="v00",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="v01",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="v10",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="v11",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="NoAmpMultiplier",
            properties=props(

            ),
            validations=[]
        ),
        DataType(
            name="AnalogPulseReference",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        UnionType(
            name="OptionalInterpolation",
            types=[]
        ),
        DataType(
            name="ChirpRates",
            properties=props(
                TypeProperty(
                    name="rate",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="time",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        EnumType(
            name="ChirpUnit",
            values=["HzPerNanoSec", "mHzPerNanoSec", "uHzPerNanoSec", "nHzPerNanoSec", "pHzPerNanoSec"]
        ),
        DataType(
            name="Interpolation",
            properties=props(
                TypeProperty(
                    name="rate",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="NoInterpolation",
            properties=props(

            ),
            validations=[]
        ),
        DataType(
            name="NoTruncate",
            properties=props(

            ),
            validations=[]
        ),
        DataType(
            name="Truncate",
            properties=props(
                TypeProperty(
                    name="value",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        UnionType(
            name="OptionalTruncate",
            types=[]
        ),

    ))
