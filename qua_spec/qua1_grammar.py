from qua_spec.grammar_model import *
from qua_spec.grammar_builder import props, types
import qua_spec.predefined_validations as validations

grammar = GrammarModel(
    version="1.0.0-draft",
    types=types(
        DataType(
            name="Program",
            properties=props(
                TypeProperty(
                    name="script",
                    type=TypeReference(
                        type="Script",
                        list=False
                    )
                ),
                TypeProperty(
                    name="config",
                    type=TypeReference(
                        type="Config",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="Script",
            properties=props(
                TypeProperty(
                    name="variables",
                    type=TypeReference(
                        type="AnyVariableDeclaration",
                        list=True
                    )
                ),
                TypeProperty(
                    name="body",
                    type=TypeReference(
                        type="BlockStatement",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="Config",
            properties=props(
                TypeProperty(
                    name="analog_outputs",
                    type=TypeReference(
                        type="AnalogOutputPortConfig",
                        list=True
                    )
                ),
                TypeProperty(
                    name="analog_inputs",
                    type=TypeReference(
                        type="AnalogInputPortConfig",
                        list=True
                    )
                ),
                TypeProperty(
                    name="digital_outputs",
                    type=TypeReference(
                        type="DigitalOutputPortConfig",
                        list=True
                    )
                ),
                TypeProperty(
                    name="elements",
                    type=TypeReference(
                        type="ElementConfig",
                        list=True
                    )
                ),
                TypeProperty(
                    name="pulses",
                    type=TypeReference(
                        type="PulseConfig",
                        list=True
                    )
                ),
                TypeProperty(
                    name="pulse_digital_bindings",
                    type=TypeReference(
                        type="PulseToDigitalBinding",
                        list=True
                    )
                ),
                TypeProperty(
                    name="analog_waveforms",
                    type=TypeReference(
                        type="AnyAnalogWaveform",
                        list=True
                    )
                ),
                TypeProperty(
                    name="digital_waveforms",
                    type=TypeReference(
                        type="DigitalWaveform",
                        list=True
                    )
                ),
                TypeProperty(
                    name="mixers",
                    type=TypeReference(
                        type="Mixer",
                        list=True
                    )
                ),
                TypeProperty(
                    name="integration_weights",
                    type=TypeReference(
                        type="IntegrationWeight",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        UnionType(
            name="AnyVariableDeclaration",
            types=[]
        ),
        DataType(
            name="BlockStatement",
            properties=props(
                TypeProperty(
                    name="statements",
                    type=TypeReference(
                        type="AnyStatement",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="AnalogOutputPortConfig",
            properties=props(
                TypeProperty(
                    name="controller",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="port",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="filter",
                    type=TypeReference(
                        type="AnalogOutputFilterConfig",
                        list=False
                    )
                ),
                TypeProperty(
                    name="offset",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="AnalogInputPortConfig",
            properties=props(
                TypeProperty(
                    name="controller",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="port",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="offset",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="gain_db",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="DigitalOutputPortConfig",
            properties=props(
                TypeProperty(
                    name="controller",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="port",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="ElementConfig",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="intermediate_frequency",
                    type=TypeReference(
                        type="OptionalIntermediateFrequency",
                        list=False
                    )
                ),
                TypeProperty(
                    name="analog_inputs",
                    type=TypeReference(
                        type="AnyElementInput",
                        list=False
                    )
                ),
                TypeProperty(
                    name="analog_outputs",
                    type=TypeReference(
                        type="ElementNamedAnalogOutput",
                        list=True
                    )
                ),
                TypeProperty(
                    name="digital_inputs",
                    type=TypeReference(
                        type="ElementNamedDigitalInput",
                        list=True
                    )
                ),
                TypeProperty(
                    name="config",
                    type=TypeReference(
                        type="AnyElementConfig",
                        list=False
                    )
                ),
                TypeProperty(
                    name="thread",
                    type=TypeReference(
                        type="AnyElementThread",
                        list=False
                    )
                ),
                TypeProperty(
                    name="hold_offset",
                    type=TypeReference(
                        type="AnyHoldOffset",
                        list=False
                    )
                ),
                TypeProperty(
                    name="output_pulse_parameters",
                    type=TypeReference(
                        type="OptionalOutputPulseParameters",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="PulseConfig",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="length",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="waveform",
                    type=TypeReference(
                        type="AnyPulseConfigWaveformReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="measurement",
                    type=TypeReference(
                        type=PrimitiveData.boolean,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="PulseToDigitalBinding",
            properties=props(
                TypeProperty(
                    name="pulse_name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="digital_pulse_name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="binding_type",
                    type=TypeReference(
                        type="PulseToDigitalBindingType",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        UnionType(
            name="AnyAnalogWaveform",
            types=[]
        ),
        DataType(
            name="DigitalWaveform",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="samples",
                    type=TypeReference(
                        type="DigitalWaveformSample",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="Mixer",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="corrections",
                    type=TypeReference(
                        type="FrequencyCorrection",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="IntegrationWeight",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="cosine",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=True
                    )
                ),
                TypeProperty(
                    name="sine",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="IntegerVariableDeclaration",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="size",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="values",
                    type=TypeReference(
                        type="LiteralIntegerExpression",
                        list=True
                    )
                ),

            ),
            validations=[
                validations.is_integer("size"),
                TypeValidation(
                    "", "values_length_match_size",
                    description="`values` length must be the same size as `size` or empty",
                    code="len(node.values) == node.size or len(node.values) == 0"
                )
            ]
        ),
        DataType(
            name="FixedVariableDeclaration",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="size",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="values",
                    type=TypeReference(
                        type="LiteralFixedExpression",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="BooleanVariableDeclaration",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="size",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="values",
                    type=TypeReference(
                        type="LiteralBooleanExpression",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        UnionType(
            name="AnyStatement",
            types=[]
        ),
        DataType(
            name="AnalogOutputFilterConfig",
            properties=props(
                TypeProperty(
                    name="feed_forward",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=True
                    )
                ),
                TypeProperty(
                    name="feed_back",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        UnionType(
            name="OptionalIntermediateFrequency",
            types=[]
        ),
        UnionType(
            name="AnyElementInput",
            types=[]
        ),
        DataType(
            name="ElementNamedAnalogOutput",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="output",
                    type=TypeReference(
                        type="OpxAnalogInputPortReference",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="ElementNamedDigitalInput",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="input",
                    type=TypeReference(
                        type="OpxDigitalOutputPortReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="delay",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="expand",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        UnionType(
            name="AnyElementConfig",
            types=[]
        ),
        UnionType(
            name="AnyElementThread",
            types=[]
        ),
        UnionType(
            name="AnyHoldOffset",
            types=[]
        ),
        UnionType(
            name="OptionalOutputPulseParameters",
            types=[]
        ),
        UnionType(
            name="AnyPulseConfigWaveformReference",
            types=[]
        ),
        EnumType(
            name="PulseToDigitalBindingType",
            values=["Recording", "Gating"]
        ),
        DataType(
            name="ArbitraryWaveform",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="samples",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=True
                    )
                ),
                TypeProperty(
                    name="multiplier",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="compression",
                    type=TypeReference(
                        type="AnyArbitraryWaveformCompression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="ConstantWaveform",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="sample",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="multiplier",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="DigitalWaveformSample",
            properties=props(
                TypeProperty(
                    name="value",
                    type=TypeReference(
                        type=PrimitiveData.boolean,
                        list=False
                    )
                ),
                TypeProperty(
                    name="length",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="FrequencyCorrection",
            properties=props(
                TypeProperty(
                    name="frequency",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="lo_frequency",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="correction",
                    type=TypeReference(
                        type="LiteralMatrix",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="LiteralIntegerExpression",
            properties=props(
                TypeProperty(
                    name="value",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="LiteralFixedExpression",
            properties=props(
                TypeProperty(
                    name="value",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="LiteralBooleanExpression",
            properties=props(
                TypeProperty(
                    name="value",
                    type=TypeReference(
                        type=PrimitiveData.boolean,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="PlayStatement",
            properties=props(
                TypeProperty(
                    name="qe",
                    type=TypeReference(
                        type="QuantumElementReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="pulse",
                    type=TypeReference(
                        type="AnyPulseType",
                        list=False
                    )
                ),
                TypeProperty(
                    name="amplitude",
                    type=TypeReference(
                        type="AmpMultiplier",
                        list=False
                    )
                ),
                TypeProperty(
                    name="duration",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="condition",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="target_input",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="chirp",
                    type=TypeReference(
                        type="Chirp",
                        list=False
                    )
                ),
                TypeProperty(
                    name="truncate",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="MeasureStatement",
            properties=props(

            ),
            validations=[]
        ),
        DataType(
            name="WaitStatement",
            properties=props(
                TypeProperty(
                    name="qe",
                    type=TypeReference(
                        type="QuantumElementReference",
                        list=True
                    )
                ),
                TypeProperty(
                    name="time",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="IfStatement",
            properties=props(
                TypeProperty(
                    name="condition",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="body",
                    type=TypeReference(
                        type="AnyStatement",
                        list=True
                    )
                ),
                TypeProperty(
                    name="else_if",
                    type=TypeReference(
                        type="ElseIfPart",
                        list=True
                    )
                ),
                TypeProperty(
                    name="else_body",
                    type=TypeReference(
                        type="AnyStatement",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="AssignmentStatement",
            properties=props(
                TypeProperty(
                    name="lhs",
                    type=TypeReference(
                        type="AnyMemoryExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="rhs",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="ForStatement",
            properties=props(
                TypeProperty(
                    name="init",
                    type=TypeReference(
                        type="AssignmentStatement",
                        list=True
                    )
                ),
                TypeProperty(
                    name="condition",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="update",
                    type=TypeReference(
                        type="AssignmentStatement",
                        list=True
                    )
                ),
                TypeProperty(
                    name="body",
                    type=TypeReference(
                        type="AnyStatement",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="RusStatement",
            properties=props(
                TypeProperty(
                    name="body",
                    type=TypeReference(
                        type="AnyStatement",
                        list=True
                    )
                ),
                TypeProperty(
                    name="until",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="fail",
                    type=TypeReference(
                        type="AnyStatement",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="AlignStatement",
            properties=props(
                TypeProperty(
                    name="qe",
                    type=TypeReference(
                        type="QuantumElementReference",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="UpdateFrequencyStatement",
            properties=props(
                TypeProperty(
                    name="qe",
                    type=TypeReference(
                        type="QuantumElementReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="value",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="units",
                    type=TypeReference(
                        type="UpdateFrequencyUnits",
                        list=False
                    )
                ),
                TypeProperty(
                    name="keep_phase",
                    type=TypeReference(
                        type=PrimitiveData.boolean,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="ZRotationStatement",
            properties=props(
                TypeProperty(
                    name="qe",
                    type=TypeReference(
                        type="QuantumElementReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="value",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="PauseStatement",
            properties=props(
                TypeProperty(
                    name="qe",
                    type=TypeReference(
                        type="QuantumElementReference",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="SaveStatement",
            properties=props(
                TypeProperty(
                    name="source",
                    type=TypeReference(
                        type="AnySaveableExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="target",
                    type=TypeReference(
                        type="SaveTargetReference",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="ForEachStatement",
            properties=props(
                TypeProperty(
                    name="pairs",
                    type=TypeReference(
                        type="VarIterablePair",
                        list=True
                    )
                ),
                TypeProperty(
                    name="body",
                    type=TypeReference(
                        type="AnyStatement",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="WaitForTriggerStatement",
            properties=props(
                TypeProperty(
                    name="qe",
                    type=TypeReference(
                        type="QuantumElementReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="pulse_to_play",
                    type=TypeReference(
                        type="PulseReference",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="StrictTimingBlockStatement",
            properties=props(
                TypeProperty(
                    name="qe",
                    type=TypeReference(
                        type="QuantumElementReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="body",
                    type=TypeReference(
                        type="AnyStatement",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="UpdateCorrectionStatement",
            properties=props(
                TypeProperty(
                    name="qe",
                    type=TypeReference(
                        type="QuantumElementReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="correction",
                    type=TypeReference(
                        type="Correction",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="ResetPhaseStatement",
            properties=props(
                TypeProperty(
                    name="qe",
                    type=TypeReference(
                        type="QuantumElementReference",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="RampToZeroStatement",
            properties=props(
                TypeProperty(
                    name="qe",
                    type=TypeReference(
                        type="QuantumElementReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="duration",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="ResetFrameStatement",
            properties=props(
                TypeProperty(
                    name="qe",
                    type=TypeReference(
                        type="QuantumElementReference",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="IntermediateFrequencyValue",
            properties=props(
                TypeProperty(
                    name="value",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="None",
            properties=props(

            ),
            validations=[]
        ),
        DataType(
            name="NoElementInput",
            properties=props(

            ),
            validations=[]
        ),
        DataType(
            name="MixElementInput",
            properties=props(
                TypeProperty(
                    name="i",
                    type=TypeReference(
                        type="OpxAnalogOutputPortReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="q",
                    type=TypeReference(
                        type="OpxAnalogOutputPortReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="mixer",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="lo_frequency",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="SingleElementInput",
            properties=props(
                TypeProperty(
                    name="single",
                    type=TypeReference(
                        type="OpxAnalogOutputPortReference",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="SingleElementInputCollection",
            properties=props(
                TypeProperty(
                    name="inputs",
                    type=TypeReference(
                        type="SingleInputCollectionItem",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="OpxAnalogInputPortReference",
            properties=props(
                TypeProperty(
                    name="opx",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="port",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="OpxDigitalOutputPortReference",
            properties=props(
                TypeProperty(
                    name="opx",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="port",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="ControlElementConfig",
            properties=props(

            ),
            validations=[]
        ),
        DataType(
            name="MeasurementElementConfig",
            properties=props(
                TypeProperty(
                    name="smearing",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="time_of_flight",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="NamedElementThread",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="DefaultElementThread",
            properties=props(

            ),
            validations=[]
        ),
        DataType(
            name="DisabledHoldOffset",
            properties=props(

            ),
            validations=[]
        ),
        DataType(
            name="EnabledHoldOffset",
            properties=props(
                TypeProperty(
                    name="duration",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="OutputPulseParameters",
            properties=props(
                TypeProperty(
                    name="signal",
                    type=TypeReference(
                        type="ThresholdAndPolarity",
                        list=False
                    )
                ),
                TypeProperty(
                    name="derivative",
                    type=TypeReference(
                        type="ThresholdAndPolarity",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="PulseConfigIQWaveformReference",
            properties=props(
                TypeProperty(
                    name="i",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="q",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="PulseConfigSingleWaveformReference",
            properties=props(
                TypeProperty(
                    name="single",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        UnionType(
            name="AnyArbitraryWaveformCompression",
            types=[]
        ),
        DataType(
            name="LiteralMatrix",
            properties=props(
                TypeProperty(
                    name="v00",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="v01",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="v10",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="v11",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="QuantumElementReference",
            properties=props(
                TypeProperty(
                    name="el",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        UnionType(
            name="AnyPulseType",
            types=[]
        ),
        DataType(
            name="AmpMultiplier",
            properties=props(
                TypeProperty(
                    name="v0",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="v1",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="v2",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="v3",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        UnionType(
            name="AnyExpression",
            types=[]
        ),
        DataType(
            name="Chirp",
            properties=props(
                TypeProperty(
                    name="rate",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="unit",
                    type=TypeReference(
                        type="ChirpUnit",
                        list=False
                    )
                ),
                TypeProperty(
                    name="times",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="ElseIfPart",
            properties=props(
                TypeProperty(
                    name="condition",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="body",
                    type=TypeReference(
                        type="AnyStatement",
                        list=True
                    )
                ),

            ),
            validations=[]
        ),
        UnionType(
            name="AnyMemoryExpression",
            types=[]
        ),
        EnumType(
            name="UpdateFrequencyUnits",
            values=["Hz", "mHz", "uHz", "nHz", "pHz"]
        ),
        UnionType(
            name="AnySaveableExpression",
            types=[]
        ),
        DataType(
            name="SaveTargetReference",
            properties=props(
                TypeProperty(
                    name="tag",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="VarIterablePair",
            properties=props(
                TypeProperty(
                    name="variable",
                    type=TypeReference(
                        type="VarRefExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="values",
                    type=TypeReference(
                        type="VarRefExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="PulseReference",
            properties=props(
                TypeProperty(
                    name="pulse",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="Correction",
            properties=props(
                TypeProperty(
                    name="matrix",
                    type=TypeReference(
                        type="Matrix",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="OpxAnalogOutputPortReference",
            properties=props(
                TypeProperty(
                    name="opx",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="port",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="SingleInputCollectionItem",
            properties=props(
                TypeProperty(
                    name="name",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="input",
                    type=TypeReference(
                        type="SingleElementInput",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="ThresholdAndPolarity",
            properties=props(
                TypeProperty(
                    name="threshold",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="polarity",
                    type=TypeReference(
                        type="ThresholdingPolarity",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="NoCompression",
            properties=props(

            ),
            validations=[]
        ),
        DataType(
            name="BySampleRateCompression",
            properties=props(
                TypeProperty(
                    name="sample_rate",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="AutomaticWaveformCompression",
            properties=props(
                TypeProperty(
                    name="max_allowed_error",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="RampPulse",
            properties=props(
                TypeProperty(
                    name="value",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="VarRefExpression",
            properties=props(
                TypeProperty(
                    name="variable",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="IORefExpression",
            properties=props(
                TypeProperty(
                    name="io",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        UnionType(
            name="LiteralExpression",
            types=[]
        ),
        DataType(
            name="BinaryExpression",
            properties=props(
                TypeProperty(
                    name="op",
                    type=TypeReference(
                        type="BinaryOperator",
                        list=False
                    )
                ),
                TypeProperty(
                    name="left",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="right",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        EnumType(
            name="ChirpUnit",
            values=["HzPerNanoSec", "mHzPerNanoSec", "uHzPerNanoSec", "nHzPerNanoSec", "pHzPerNanoSec"]
        ),
        DataType(
            name="Matrix",
            properties=props(
                TypeProperty(
                    name="v00",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="v01",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="v10",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="v11",
                    type=TypeReference(
                        type="AnyExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        EnumType(
            name="ThresholdingPolarity",
            values=["Ascending", "Descending"]
        ),
        EnumType(
            name="BinaryOperator",
            values=["ADD", "SUB", "MULT", "DIV", "AND", "OR", "XOR", "LT", "LET", "GT", "GET", "EQ", "SHL", "SHR"]
        ),
        DataType(
            name="BareIntegration",
            properties=props(
                TypeProperty(
                    name="integration",
                    type=TypeReference(
                        type="IntegrationWeightReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="target",
                    type=TypeReference(
                        type="AnyMemoryExpression",
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="DualBareIntegration",
            properties=props(
                TypeProperty(
                    name="integration1",
                    type=TypeReference(
                        type="IntegrationWeightReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="integration2",
                    type=TypeReference(
                        type="IntegrationWeightReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="target",
                    type=TypeReference(
                        type="AnyMemoryExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="element_output1",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="element_output2",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="DemodIntegration",
            properties=props(
                TypeProperty(
                    name="integration",
                    type=TypeReference(
                        type="IntegrationWeightReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="target",
                    type=TypeReference(
                        type="AnyMemoryExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="element_output",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="DualDemodIntegration",
            properties=props(
                TypeProperty(
                    name="integration1",
                    type=TypeReference(
                        type="IntegrationWeightReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="integration2",
                    type=TypeReference(
                        type="IntegrationWeightReference",
                        list=False
                    )
                ),
                TypeProperty(
                    name="target",
                    type=TypeReference(
                        type="AnyMemoryExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="element_output1",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),
                TypeProperty(
                    name="element_output2",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="RawTimeTagging",
            properties=props(
                TypeProperty(
                    name="target",
                    type=TypeReference(
                        type="AnyMemoryExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="target_len",
                    type=TypeReference(
                        type="VarRefExpression",
                        list=False
                    )
                ),
                TypeProperty(
                    name="max_time",
                    type=TypeReference(
                        type=PrimitiveData.number,
                        list=False
                    )
                ),
                TypeProperty(
                    name="element_output",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        DataType(
            name="IntegrationWeightReference",
            properties=props(
                TypeProperty(
                    name="integration_weight",
                    type=TypeReference(
                        type=PrimitiveData.string,
                        list=False
                    )
                ),

            ),
            validations=[]
        ),
        EnumType(
            name="QuaPrimitiveType",
            values=["Int", "Fixed", "Boolean"]
        ),
        UnionType(
            name="AnyMeasureProcess",
            types=[]
        ),
        UnionType(
            name="AnyAnalogMeasureProcess",
            types=[]
        ),

    ))
