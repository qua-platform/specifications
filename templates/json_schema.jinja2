{
    "$id": "https://qualang.io/v{{ grammar.version }}/draft1/qua.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "description": "JSON representation of the QUA language",
    "$ref": "#/definitions/Program",
    "definitions": {
{% for type in grammar.types.values() %}
{%- if type.is_data %}
        "{{ type.name }}": {
            "type": "object",
            "properties": {
                {% for prop in type.properties.values() -%}
                "{{ prop.name }}": {
                    {%- if prop.type.is_primitive and not prop.type.list -%}
                    "type": {{
                        {'number':'"number"', 'string': '"string"', 'boolean': '"boolean"'}.get(prop.type.as_primitive_type_string)
                    }}
                    {%- elif prop.type.is_primitive and prop.type.list -%}
                    "type": "array",
                    "items": {
                        "type": {{
                            {'number':'"number"', 'string': '"string"', 'boolean': '"boolean"'}.get(prop.type.as_primitive_type_string)
                        }}
                    }
                    {%- elif prop.type.list -%}
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/{{ prop.type.type }}"
                    }
                    {%- else -%}
                    "$ref": "#/definitions/{{ prop.type.type }}"
                    {%- endif %}
                },
                {% endfor %}
                "_location": {
                    "type": "object"
                }
            }
        }{{ "" if loop.last else "," }}
{%- elif type.is_enum %}
        "{{ type.name }}": {
            "type": "string",
            "enum": ["{{ type.values|join('", "') }}"]
        }{{ "" if loop.last else "," }}
{%- elif type.is_union %}
        "{{ type.name }}": {
            "oneOf": [
                {% for inner in type.find_datatypes_recursively(grammar) -%}
                {
                    "allOf": [
                        {
                            "type": "object",
                            "properties": {
                                "_type": {
                                    "type": "string",
                                    "const": "{{ inner.name }}"
                                }
                            }
                        },
                        {
                            "$ref": "#/definitions/{{ inner.name }}"
                        }
                    ]
                }{{ "" if loop.last else "," }}
                {% endfor %}
            ]
        }{{ "" if loop.last else "," }}
{%- endif %}
{% endfor %}
    }
}